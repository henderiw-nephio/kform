version: 1

before:
  hooks:
    - go mod tidy
    - go mod download
    #- go generate ./...

builds:
- id: provider-kubernetes
  main: providers/provider-kubernetes/main.go
  binary: 'provider-kubernetes_v{{ .Version }}'
  env:
    - CGO_ENABLED=0
  goos:
    - darwin
    - freebsd
    - linux
    - openbsd
    #- windows
  goarch:
    - '386'
    - amd64
    - arm
    - arm64
  ignore:
    - goarch: arm
      goos: windows
    - goarch: arm64
      goos: freebsd
    - goarch: arm64
      goos: windows
    - goarch: arm64
      goos: openbsd
  mod_timestamp: '{{ .CommitTimestamp }}'
- id: provider-resourcebackend
  main: providers/provider-resourcebackend/main.go
  binary: 'provider-resourcebackend{{ .Version }}'
  env:
    - CGO_ENABLED=0
  goos:
    - darwin
    - freebsd
    - linux
    - openbsd
    #- windows
  goarch:
    - '386'
    - amd64
    - arm
    - arm64
  ignore:
    - goarch: arm
      goos: windows
    - goarch: arm64
      goos: freebsd
    - goarch: arm64
      goos: windows
    - goarch: arm64
      goos: openbsd
  mod_timestamp: '{{ .CommitTimestamp }}'
archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
